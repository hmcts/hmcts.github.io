---
title: TLS certificates
last_reviewed_on: 2021-10-25
review_in: 6 months
weight: 3
---

# <%= current_page.data.title %>

<!-- Inspired by the MoJ policy: https://ministryofjustice.github.io/security-guidance/automated-certificate-renewal/#automated-certificate-renewal -->

Where technically suitable, all new HMCTS domains must use automated certificate techniques and services, 
such as [Microsoft managed certificates](https://docs.microsoft.com/en-us/azure/frontdoor/front-door-custom-domain-https#option-1-default-use-a-certificate-managed-by-front-door)
(most preferred) or LetsEncrypt (uses ACME).

Over time, existing HMCTS domains must also be considered for migration to automated certificate provisioning and 
management techniques (preferably on their next certificate renewal cycle in advance of expiry) in order to reduce 
the consequences and management overheads of manual certificate renewal.

HMCTS acknowledges that not all systems support automated certificate management,
but leveraging such technology where possible reduces management overheads, the costs of such overheads and the consequences of 
unexpected certificate expiry.

If your site is being hosted on:

- [Azure FrontDoor](https://docs.microsoft.com/en-us/azure/frontdoor/)
- [Azure App Service](https://docs.microsoft.com/en-us/azure/app-service/)
- [Azure CDN](https://docs.microsoft.com/en-us/azure/cdn/)

Then you must use [Microsoft managed certificates](https://docs.microsoft.com/en-us/azure/frontdoor/front-door-custom-domain-https#option-1-default-use-a-certificate-managed-by-front-door)

## Manual certificate requests

If you cannot use a managed certificate then please raise a request in [#platops-help](https://app.slack.com/client/T1L0WSW9F/C8SR5CAMU),
the ticket should contain the following information:

- Where the certificate is to be hosted
- DNS Name and SANS

## ACME Certificates

Let's Encrypt is a free, automated and open CA. ACME protocol is used to automate the certificate issuance.
We are using [Key Vault Acmebot](https://github.com/shibayan/keyvault-acmebot) function app as an ACME client.

Key Vault Acmebot is deployed as part of [ops-bootstrap](https://github.com/hmcts/ops-bootstrap) (private repo) using [terraform module](https://github.com/hmcts/terraform-module-acme-function), there is one instance per subscription.

The naming convention for keyvaults and function App are acme<subscription name without hyphen, `sharedservices` is replaced with `sds` because of length limits. E.g. `acmedtssdstest`.

The naming convention for certificate name stored in Key Vault is `<DNS Name/wildcard>-<DNSZone>` seperated by hyphen.  E.g. `hmi-apim-test-platform-hmcts-net`, `wildcard-test-platform-hmcts-net`.


