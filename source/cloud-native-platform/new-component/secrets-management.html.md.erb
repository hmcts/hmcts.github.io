---
title: Secrets Management
last_reviewed_on: 2025-03-31
review_in: 6 months
weight: 5
---

# <%= current_page.data.title %>

We use [Azure Key Vault](https://docs.microsoft.com/en-us/azure/key-vault/) for managing secrets.

- Use [cnp-module-key-vault](https://github.com/hmcts/cnp-module-key-vault) terraform module to create key vaults.
- Naming convention for keyvaults is `{product}-{component}-{env}`.

    <%= warning_text('Name of the keyvault cannot exceed 24 characters, which means {product}-{component} length cannot be more than 15 characters') %>

- Your team will [manage the secrets](https://github.com/hmcts/cnp-module-key-vault#writing-secrets-to-key-vaults), use the CLI to write secrets as you won't be able to see the vault in production, only write and list access is given out, if you're unsure if a credential is correct you can just overwrite it with the correct one.
- Use shared vaults (`{product}-{env}`) created through shared infrastructure repository if there are more secrets shared across multiple components in your product.
- If any secrets are exposed in the open, raise a security incident, by reporting it to 'Security Operations', create a new secret, update the application configuration and revoke the old secret.

## Setup application access.

1. Applications running in Kubernetes use [Azure Workload Identity](https://azure.github.io/azure-workload-identity/docs/) to access secrets from keyvaults.
2. We recommend using one workload identity per product / team.
3. Managed Identity can be created by using the [cnp-module-keyvault](https://github.com/hmcts/cnp-module-key-vault#application-access-using-managed-identities) terraform module.
    `Note: You need to run your infrastructure pipeline on each environment for this to be added`
4. Add `AzureIdentity` k8s resources to Flux.
5. All base helm charts support [configuring keyvaults](https://github.com/hmcts/chart-java#adding-azure-key-vault-secrets) to mount secrets on container file system using [secrets-store-csi-driver-provider-azure](https://github.com/Azure/secrets-store-csi-driver-provider-azure).
6. Applications should use [properties-volume-nodejs](https://github.com/hmcts/properties-volume-nodejs) or Spring Boot [config tree](https://spring.io/blog/2020/08/14/config-file-processing-in-spring-boot-2-4) to set secrets from file systems as environment variables.
