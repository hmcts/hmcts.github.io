---
title: Update Redis with Zone Redundancy
last_reviewed_on: 2025-10-12
review_in: 6 months
weight: 10
---

# Update Redis with Zone Redundancy

This guide explains how to update your Azure Cache for Redis to enable zone redundancy for improved availability and resilience.

## Prerequisites

- Azure Cache for Redis instance
- Appropriate permissions to modify the Redis cache

## Upgrade from Basic to Standard SKU

If your Redis cache is currently using the **Basic SKU**, you must first upgrade to **Standard** before enabling zone redundancy, as zone redundancy is not available on Basic tier.

### Steps to Upgrade SKU:

1. **Navigate to your Redis cache** in the Azure Portal
2. **Go to Settings** → **Scale** in the left navigation menu
3. **Select Standard tier** from the available options
4. **Choose the appropriate cache size** based on your requirements
5. **Click Select** to apply the upgrade


> **Note:** The upgrade process may take several minutes.

## Enable Zone Redundancy

Once switched to Standard, you can verify the upgrade was successful by checking the Overview page which will show "Running - Standard 1 GB" status:

then under the Settings choose **Advanced settings**, check the **Zone redundancy** option on the portal and save.

### Steps to Enable Zone Redundancy:

1. **Navigate to Settings** → **Advanced settings** in the left navigation menu
2. **Scroll down to Zone redundancy** section
3. **Check the "Allocate zones automatically"** checkbox
4. **Click Save** to apply the changes

## Update Terraform Configuration

Once you have enabled zone redundancy on the portal, then update your code to Standard in the Terraform configuration:


Update your Terraform configuration to reflect the Standard SKU:

```hcl
sku_name = "Standard"
family   = "C"
```

When you run the Terraform plan, it shows nothing to add or destroy.


This confirms that your Terraform configuration now matches the infrastructure state after the manual upgrade.

## Upgrade from Standard to Premium (Optional)

Now switching from Standard to Premium as shown. Select **P1 Premium** for enhanced features:

### Steps to Upgrade to Premium:

1. **Navigate to Settings** → **Scale** in the left navigation menu
2. **Select P1 Premium** from the Premium tier options
3. **Review the features** including:
   - 6 GB Cache
   - All Standard features
   - Data Persistence
   - Virtual Network support
   - Redis Cluster support
4. **Click Select** to apply the Premium upgrade


## Update Terraform Configuration to Premium

Change the code to Premium as shown:

```hcl
sku_name = "Premium"
family   = "P"
rdb_backup_enabled = true
```

Update your Terraform configuration to reflect the Premium SKU:

```hcl
sku_name = "Premium"
family   = "P"
rdb_backup_enabled = true
```

When you run the Terraform plan, it shows 1 to add for storage account creation, nothing to destroy.

## For Existing Premium Tier Redis Caches

If you already have a Premium tier Redis cache instance, you can enable zone redundancy directly:

### Steps for Premium Tier:

1. **Navigate to your Redis cache** in the Azure Portal
2. **Go to Settings** → **Advanced settings** in the left navigation menu
3. **Check the "Zone redundancy"** option
4. **Click Save** to apply the changes

### Update Terraform Configuration

After enabling zone redundancy in the portal, update your Terraform configuration:

```hcl
sku_name = "Premium"
family   = "P"
rdb_backup_enabled = true
```

When you run `terraform plan`, it will show it needs to create a Storage Account but won't recreate the Redis instance.
Running `terraform apply` will create the Storage Account needed for backup functionality.

> **Note:** The Storage Account is required for the RDB backup feature enabled with `rdb_backup_enabled = true` in your Terraform configuration.




